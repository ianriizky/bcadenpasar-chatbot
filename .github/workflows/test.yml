# GitHub Action for Laravel with MySQL
# https://github.com/shivammathur/setup-php/blob/master/examples/laravel-mysql.yml
name: Testing Laravel with MySQL

on: [push, pull_request]

jobs:
  laravel:
    name: Laravel (PHP 8.0)

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: bcadenpasar_chatbot
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug

      - name: Start mysql service
        run: sudo systemctl start mysql

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.github', '.env');"
          php artisan key:generate

      - name: Clear config
        run: php artisan config:clear

      - name: Run migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Test with phpunit
        run: |
          mkdir -p build/logs
          vendor/bin/phpunit --verbose --coverage-clover build/logs/clover.xml
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Upload scrutinizer coverage
        uses: sudo-bot/action-scrutinizer@latest
        with:
          cli-args: "--format=php-clover build/logs/clover.xml"

      - name: Upload coverage results to coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml -v
